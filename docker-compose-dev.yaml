services:
  api:
    image: golang:1.22
    container_name: proxyfinder-api-dev
    command: sh -c "cd /app && make up-api-dev"
    environment:
      - CGO_ENABLED=1
    volumes:
      - ./server:/app
      - $GOPATH/pkg/mod:/go/pkg/mod
      - $GOPATH/bin:/go/bin
    ports:
      - 8080:8080
    depends_on:
      migrate:
        condition: service_completed_successfully
    restart: always

  scheduler:
    image: golang:1.22
    container_name: proxyfinder-scheduler-dev
    command: sh -c "cd /app && make up-scheduler-dev"
    volumes:
      - ./server:/app
      - $GOPATH/pkg/mod:/go/pkg/mod
      - $GOPATH/bin:/go/bin
    depends_on:
      migrate:
        condition: service_completed_successfully
    restart: always


  migrate:
    image: golang:1.22
    container_name: proxyfinder-migrate-dev
    command: bash -c " cd /app && make migrate-dev"
    volumes:
      - ./server:/app
      - $GOPATH/pkg/mod:/go/pkg/mod
      - $GOPATH/bin:/go/bin

  frontend:
    image: node:20-alpine
    container_name: proxyfinder-frontend-dev
    ports:
      - 80:80
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "yarn && yarn dev"
    restart: always
    depends_on:
      - api
