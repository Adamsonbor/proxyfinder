services:
  api:
    restart: always
    build: ./server/
    container_name: proxyfinder-api
    command: bash -c "
      cd /app && \
      build/api --config /app/config/prod.yaml >> /app/logs/prod.log"
    volumes:
      - ./server/config:/app/config
      - ./server/storage:/app/storage
      - ./server/build:/app/build
      - ./logs/api:/app/logs
    ports:
      - 8080:8080
    depends_on:
      migrate:
        condition: service_completed_successfully
      rabbit:
        condition: service_healthy

  rabbit:
    image: rabbitmq:3.13-alpine
    container_name: proxyfinder-rabbit
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:rw
    environment:
      - RABBITMQ_DEFAULT_USER=$RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS=$RABBITMQ_DEFAULT_PASS
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      start_period: 5s
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  scheduler:
    build: ./server/
    container_name: proxyfinder-scheduler
    command: bash -c "
      cd /app && \
      build/scheduler --config /app/config/prod.yaml >> /app/logs/prod.log"
    volumes:
      - ./server/config:/app/config
      - ./server/storage:/app/storage
      - ./server/build:/app/build
      - ./logs/scheduler:/app/logs
    depends_on:
      migrate:
        condition: service_completed_successfully

  migrate:
    build: ./server/
    container_name: proxyfinder-migrate
    command: bash -c "
      cd /app && \
      build/goose -dir migrations/goose sqlite3 ./storage/prod.db up && \
      build/initdb --dir migrations/init/geonode --db ./storage/prod.db up"
    volumes:
      - ./server/storage:/app/storage
      - ./server/build:/app/build
      - ./server/migrations:/app/migrations/
      - ./server/config:/app/config

  frontend:
    image: nginx:1.26-alpine
    container_name: proxyfinder-frontend
    ports:
      - 80:80
    working_dir: /app
    volumes:
      - ./frontend/dist:/app/frontend/dist
      - ./admin/dist:/app/admin/dist
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./logs/frontend:/var/log/nginx
    restart: always
    depends_on:
      - api
