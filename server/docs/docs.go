// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/country": {
            "get": {
                "description": "Get all countries with filters and sorting",
                "tags": [
                    "country"
                ],
                "summary": "Get all countries",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Results per page",
                        "name": "perPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Country name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Country code",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/favorits": {
            "get": {
                "description": "Get all favorits with filters",
                "tags": [
                    "favorits"
                ],
                "summary": "Get all favorits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Results per page",
                        "name": "perPage",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Proxy id",
                        "name": "proxy_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/favorits/": {
            "post": {
                "description": "Create favorit. Request must contain Authorization in headers and {user_id, proxy_id} in body",
                "tags": [
                    "favorits"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "FavoriteCreate",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FavoriteCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/favorits/{proxy_id}": {
            "delete": {
                "description": "Delete favorit. Request must contain proxy_id and access_token in headers for authorization",
                "tags": [
                    "favorits"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proxy id",
                        "name": "proxy_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/proxy": {
            "get": {
                "description": "Get all proxies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxy"
                ],
                "summary": "Get all proxies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "perPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Country name",
                        "name": "country_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Country code",
                        "name": "country_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status name",
                        "name": "status_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IP",
                        "name": "ip",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Port",
                        "name": "port",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Protocol",
                        "name": "protocol",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Response time",
                        "name": "response_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "get": {
                "description": "Get user info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chiapi.Response"
                        }
                    }
                }
            }
        },
        "/auth/google/login": {
            "get": {
                "description": "redirect to google login",
                "tags": [
                    "auth"
                ],
                "summary": "redirect to google login",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/google/refresh": {
            "get": {
                "description": "update refresh token",
                "tags": [
                    "auth"
                ],
                "summary": "update refresh token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "refresh token",
                        "name": "refresh_token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "chiapi.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {},
                "status": {
                    "type": "integer"
                }
            }
        },
        "dto.FavoriteCreate": {
            "type": "object",
            "properties": {
                "proxy_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
